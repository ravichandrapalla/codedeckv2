{"version":3,"file":"static/js/225.006bd53b.chunk.js","mappings":"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","sources":["Components/Playground/Navbar.jsx","Components/Playground/CodeEditor.jsx","Components/Playground/EditContainer.jsx","Components/Playground/InputConsole.jsx","Components/Playground/OutputConsole.jsx","Pages/PlayGround.jsx"],"sourcesContent":["import React from \"react\";\r\n\r\nfunction Navbar({ isFullScreen }) {\r\n  return (\r\n    <div\r\n      className={`relative ${\r\n        isFullScreen ? \"h-0\" : \"h-16\"\r\n      } bg-black flex justify-center items-center gap-4`}\r\n    >\r\n      <img className=\"w-16\" src=\"/logo.png\" alt=\"\" />\r\n      <div className=\"text-white text-2xl\">Code Deck</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport CodeMirror from \"@uiw/react-codemirror\";\r\n\r\n\r\n\r\nimport { githubDark, githubLight } from \"@uiw/codemirror-theme-github\";\r\nimport { bespin } from \"@uiw/codemirror-theme-bespin\";\r\nimport { duotoneDark, duotoneLight } from \"@uiw/codemirror-theme-duotone\";\r\nimport { dracula } from \"@uiw/codemirror-theme-dracula\";\r\nimport { xcodeDark, xcodeLight } from \"@uiw/codemirror-theme-xcode\";\r\nimport { vscodeDark } from \"@uiw/codemirror-theme-vscode\";\r\nimport { okaidia } from \"@uiw/codemirror-theme-okaidia\";\r\n\r\n\r\n\r\n\r\nimport { cpp } from \"@codemirror/lang-cpp\";\r\nimport { java } from \"@codemirror/lang-java\";\r\nimport { javascript } from \"@codemirror/lang-javascript\";\r\nimport { python } from \"@codemirror/lang-python\";\r\n\r\n\r\nimport { indentUnit } from \"@codemirror/language\";\r\nimport { EditorState } from \"@codemirror/state\";\r\n\r\nconst CodeEditor = ({\r\n  currentLanguage,\r\n  currentTheme,\r\n  currentCode,\r\n  setCurrentCode,\r\n  isFullScreen,\r\n}) => {\r\n  const [theme, setTheme] = useState(githubDark);\r\n  const [language, setLanguage] = useState(javascript);\r\n\r\n  useEffect(() => {\r\n    if (currentLanguage === \"cpp\") setLanguage(cpp);\r\n    if (currentLanguage === \"java\") setLanguage(java);\r\n    if (currentLanguage === \"javascript\") setLanguage(javascript);\r\n    if (currentLanguage === \"python\") setLanguage(python);\r\n  }, [currentLanguage]);\r\n\r\n  useEffect(() => {\r\n    if (currentTheme === \"githubDark\") setTheme(githubDark);\r\n    if (currentTheme === \"githubLight\") setTheme(githubLight);\r\n    if (currentTheme === \"bespin\") setTheme(bespin);\r\n    if (currentTheme === \"duotoneDark\") setTheme(duotoneDark);\r\n    if (currentTheme === \"duotoneLight\") setTheme(duotoneLight);\r\n    if (currentTheme === \"dracula\") setTheme(dracula);\r\n    if (currentTheme === \"xcodeDark\") setTheme(xcodeDark);\r\n    if (currentTheme === \"xcodeLight\") setTheme(xcodeLight);\r\n    if (currentTheme === \"vscodeDark\") setTheme(vscodeDark);\r\n    if (currentTheme === \"okaidia\") setTheme(okaidia);\r\n  }, [currentTheme]);\r\n\r\n  return (\r\n    <CodeMirror\r\n      value={currentCode}\r\n      height={`${isFullScreen ? \"92vh\" : \"76vh\"}`}\r\n      theme={theme}\r\n      extensions={[\r\n        language,\r\n        indentUnit.of(\"        \"),\r\n        EditorState.tabSize.of(8),\r\n        EditorState.changeFilter.of(() => true),\r\n      ]}\r\n      onChange={(value) => setCurrentCode(value)}\r\n      basicSetup={{\r\n        lineNumbers: true,\r\n        highlightActiveLineGutter: true,\r\n        highlightSpecialChars: true,\r\n        history: true,\r\n        foldGutter: true,\r\n        drawSelection: true,\r\n        dropCursor: true,\r\n        allowMultipleSelections: true,\r\n        indentOnInput: true,\r\n        syntaxHighlighting: true,\r\n        bracketMatching: true,\r\n        closeBrackets: true,\r\n        autocompletion: true,\r\n        rectangularSelection: true,\r\n        crosshairCursor: true,\r\n        highlightActiveLine: true,\r\n        highlightSelectionMatches: true,\r\n        closeBracketsKeymap: true,\r\n        defaultKeymap: true,\r\n        searchKeymap: true,\r\n        historyKeymap: true,\r\n        foldKeymap: true,\r\n        completionKeymap: true,\r\n        lintKeymap: true,\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default CodeEditor;\r\n","import React, { useContext, useState } from \"react\";\r\nimport { ModalContext } from \"../../Context/ModalContext\";\r\nimport { BiEditAlt, BiImport, BiExport, BiFullscreen } from \"react-icons/bi\";\r\nimport Select from \"react-select\";\r\nimport { languageMap } from \"../../Context/PlaygroundContext\";\r\nimport CodeEditor from \"./CodeEditor\";\r\nfunction EditorContainer({\r\n  title,\r\n  currentLanguage,\r\n  setCurrentLanguage,\r\n  currentCode,\r\n  setCurrentCode,\r\n  folderId,\r\n  playgroundId,\r\n  saveCode,\r\n  runCode,\r\n  getFile,\r\n  isFullScreen,\r\n  setIsFullScreen,\r\n}) {\r\n  const { openModal } = useContext(ModalContext);\r\n  const themeOptions = [\r\n    { value: \"githubDark\", label: \"githubDark\" },\r\n    { value: \"githubLight\", label: \"githubLight\" },\r\n    { value: \"bespin\", label: \"bespin\" },\r\n    { value: \"duotoneDark\", label: \"duotoneDark\" },\r\n    { value: \"duotoneLight\", label: \"duotoneLight\" },\r\n    { value: \"dracula\", label: \"dracula\" },\r\n    { value: \"xcodeDark\", label: \"xcodeDark\" },\r\n    { value: \"xcodeLight\", label: \"xcodeLight\" },\r\n    { value: \"vscodeDark\", label: \"vscodeDark\" },\r\n    { value: \"vscodeLight\", label: \"vscodeLight\" },\r\n    { value: \"okaidia\", label: \"okaidia\" },\r\n  ];\r\n\r\n  const languageOptions = [\r\n    { value: \"cpp\", label: \"cpp\" },\r\n    { value: \"javascript\", label: \"javascript\" },\r\n    { value: \"java\", label: \"java\" },\r\n    { value: \"python\", label: \"python\" },\r\n  ];\r\n\r\n  const handleThemeChange = (selectedOption) => {\r\n    setCurrentTheme(selectedOption);\r\n  };\r\n\r\n  const handleLanguageChange = (selectedOption) => {\r\n    setLanguage(selectedOption);\r\n    setCurrentLanguage(selectedOption.value);\r\n    setCurrentCode(languageMap[selectedOption.value].defaultCode);\r\n  };\r\n\r\n  const [currentTheme, setCurrentTheme] = useState({\r\n    value: \"githubDark\",\r\n    label: \"githubDark\",\r\n  });\r\n  const [language, setLanguage] = useState(() => {\r\n    for (let i = 0; i < languageOptions.length; i++) {\r\n      if (languageOptions[i].value === currentLanguage) {\r\n        return languageOptions[i];\r\n      }\r\n    }\r\n    return languageOptions[0];\r\n  });\r\n\r\n  return (\r\n    <div\r\n      className={`flex flex-col  ${\r\n        isFullScreen ? \"h-[100vh]\" : \"h-[calc(100vh - 4.5rem)]\"\r\n      }`}\r\n    >\r\n      {!isFullScreen && (\r\n        <div className=\"bg-white flex justify-between items-center flex-wrap p-4\">\r\n          <div className=\"flex gap-4 items-center\">\r\n            <h3 className=\"font-semibold\"> {title}</h3>\r\n            <BiEditAlt\r\n              style={{ fontSize: \"1.5rem\" }}\r\n              onClick={() =>\r\n                openModal({\r\n                  show: true,\r\n                  modalType: 5,\r\n                  identifiers: {\r\n                    folderId: folderId,\r\n                    cardId: playgroundId,\r\n                  },\r\n                })\r\n              }\r\n            />\r\n            <button className=\" font-normal  rounded-full p-2 bg-[#0097d7]\">\r\n              Save code\r\n            </button>\r\n          </div>\r\n          <div className=\"flex gap-4\">\r\n            <Select\r\n              options={languageOptions}\r\n              value={language}\r\n              onChange={handleLanguageChange}\r\n            />\r\n            <Select\r\n              options={themeOptions}\r\n              value={currentTheme}\r\n              onChange={handleThemeChange}\r\n            />\r\n          </div>\r\n        </div>\r\n      )}\r\n      <CodeEditor\r\n        currentLanguage={currentLanguage}\r\n        currentTheme={currentTheme.value}\r\n        currentCode={currentCode}\r\n        setCurrentCode={setCurrentCode}\r\n        isFullScreen={isFullScreen}\r\n      />\r\n\r\n      <div className=\"bg-white flex w-full justify-between p-4  \">\r\n        <button\r\n          className=\"flex gap-3 items-center\"\r\n          onClick={() => setIsFullScreen((isFullScreen) => !isFullScreen)}\r\n        >\r\n          <BiFullscreen style={{ fontSize: \"1.5rem\" }} />{\" \"}\r\n          {isFullScreen ? \"Minimize Screen\" : \"Full Screen\"}\r\n        </button>\r\n\r\n        <label className=\"flex gap-3 items-center\" htmlFor=\"codefile\">\r\n          <input\r\n            className=\"hidden\"\r\n            type=\"file\"\r\n            accept=\".\"\r\n            id=\"codefile\"\r\n            onChange={(e) => getFile(e, setCurrentCode)}\r\n          />{\" \"}\r\n          <BiImport style={{ fontSize: \"1.5rem\" }} /> Import Code\r\n        </label>\r\n\r\n        <a\r\n          className=\"flex gap-3 items-center\"\r\n          href={`data:text/plain;charset=utf-8,${encodeURIComponent(\r\n            currentCode\r\n          )}`}\r\n          download=\"code.txt\"\r\n        >\r\n          <BiExport style={{ fontSize: \"1.5rem\" }} /> Export Code\r\n        </a>\r\n        <button\r\n          onClick={runCode}\r\n          className=\" font-normal  rounded-full p-2 bg-[#0097d7]\"\r\n        >\r\n          Run code\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EditorContainer;\r\n","import React from \"react\";\r\nimport { BiImport } from \"react-icons/bi\";\r\n\r\nfunction InputConsole({ currentInput, setCurrentInput, getFile }) {\r\n  return (\r\n    <div className=\"flex flex-col\">\r\n      <div className=\"bg-[#ededed] p-4 flex justify-between\">\r\n        <h3 className=\"font-bold\">Input :</h3>\r\n        <label\r\n          htmlFor=\"inputfile\"\r\n          className=\"flex items-center font-semibold gap-3\"\r\n        >\r\n          <input\r\n            className=\"hidden\"\r\n            type=\"file\"\r\n            accept=\".\"\r\n            id=\"inputfile\"\r\n            onChange={(e) => getFile(e, setCurrentInput)}\r\n          />\r\n          <BiImport style={{ fontSize: \"1.5rem\" }} /> Import Input\r\n        </label>\r\n      </div>\r\n      <textarea\r\n        className=\"h-[calc(50vh_-_4rem)] resize-none\"\r\n        onChange={(e) => setCurrentInput(e.target.value)}\r\n        value={currentInput}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InputConsole;\r\n","import React from \"react\";\r\nimport { BiExport } from \"react-icons/bi\";\r\nfunction OutputConsole({ currentOutput }) {\r\n  return (\r\n    <div className=\"flex flex-col\">\r\n      <div className=\"bg-[#ededed] p-4 flex justify-between\">\r\n        <h3 className=\"font-bold\">Output :</h3>\r\n        <a\r\n          className=\"flex font-semibold gap-4\"\r\n          href={`data:text/plain;charset=utf-8,${encodeURIComponent(\r\n            currentOutput\r\n          )}`}\r\n          download=\"output.txt\"\r\n        >\r\n          <BiExport className=\"text-2xl\" /> Export Output\r\n        </a>\r\n      </div>\r\n      <textarea\r\n        className=\"h-[calc(50vh_-_8rem)] resize-none\"\r\n        value={currentOutput}\r\n        disabled\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default OutputConsole;\r\n","import React, { useContext, useState } from \"react\";\r\nimport Navbar from \"../Components/Playground/Navbar\";\r\nimport EditorContainer from \"../Components/Playground/EditContainer\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { PlaygroundContext, languageMap } from \"../Context/PlaygroundContext\";\r\nimport { ModalContext } from \"../Context/ModalContext\";\r\nimport Modal from \"../Components/Modal\";\r\nimport { Buffer } from \"buffer\";\r\nimport axios from \"axios\";\r\nimport InputConsole from \"../Components/Playground/InputConsole\";\r\nimport OutputConsole from \"../Components/Playground/OutputConsole\";\r\nfunction PlayGround() {\r\n  const { folderId, playgroundId } = useParams();\r\n  const { folders, savePlayground } = useContext(PlaygroundContext);\r\n  const { isOpenModal, openModal, closeModal } = useContext(ModalContext);\r\n  const { title, language, code } = folders[folderId].playgrounds[playgroundId];\r\n\r\n  const [currentLanguage, setCurrentLanguage] = useState(language);\r\n  const [currentCode, setCurrentCode] = useState(code);\r\n  const [currentInput, setCurrentInput] = useState(\"\");\r\n  const [currentOutput, setCurrentOutput] = useState(\"\");\r\n  const [isFullScreen, setIsFullScreen] = useState(false);\r\n\r\n  const saveCode = () => {\r\n    savePlayground(folderId, playgroundId, currentCode, currentLanguage);\r\n  };\r\n\r\n  const encode = (str) => {\r\n    return Buffer.from(str, \"binary\").toString(\"base64\");\r\n  };\r\n\r\n  const decode = (str) => {\r\n    return Buffer.from(str, \"base64\").toString();\r\n  };\r\n\r\n  const postSubmission = async (language_id, source_code, stdin) => {\r\n    const options = {\r\n      method: \"POST\",\r\n      url: \"https://judge0-ce.p.rapidapi.com/submissions\",\r\n      params: { base64_encoded: \"true\", fields: \"*\" },\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        \"X-RapidAPI-Key\": \"b4e5c5a05fmsh9adf6ec091523f8p165338jsncc58f31c26e1\",\r\n        \"X-RapidAPI-Host\": \"judge0-ce.p.rapidapi.com\",\r\n      },\r\n      data: JSON.stringify({\r\n        language_id: language_id,\r\n        source_code: source_code,\r\n        stdin: stdin,\r\n      }),\r\n    };\r\n\r\n    const res = await axios.request(options);\r\n    return res.data.token;\r\n  };\r\n\r\n  const getOutput = async (token) => {\r\n    const options = {\r\n      method: \"GET\",\r\n      url: \"https://judge0-ce.p.rapidapi.com/submissions/\" + token,\r\n      params: { base64_encoded: \"true\", fields: \"*\" },\r\n      headers: {\r\n        \"X-RapidAPI-Key\": \"3ed7a75b44mshc9e28568fe0317bp17b5b2jsn6d89943165d8\",\r\n        \"X-RapidAPI-Host\": \"judge0-ce.p.rapidapi.com\",\r\n      },\r\n    };\r\n\r\n    const res = await axios.request(options);\r\n    if (res.data.status_id <= 2) {\r\n      const res2 = await getOutput(token);\r\n      return res2.data;\r\n    }\r\n    return res.data;\r\n  };\r\n\r\n  const runCode = async () => {\r\n    openModal({\r\n      show: true,\r\n      modalType: 6,\r\n      identifiers: {\r\n        folderId: \"\",\r\n        cardId: \"\",\r\n      },\r\n    });\r\n    const language_id = languageMap[currentLanguage].id;\r\n    const source_code = encode(currentCode);\r\n    const stdin = encode(currentInput);\r\n\r\n    const token = await postSubmission(language_id, source_code, stdin);\r\n\r\n    const res = await getOutput(token);\r\n    const status_name = res.status.description;\r\n    const decoded_output = decode(res.stdout ? res.stdout : \"\");\r\n    const decoded_compile_output = decode(\r\n      res.compile_output ? res.compile_output : \"\"\r\n    );\r\n    const decoded_error = decode(res.stderr ? res.stderr : \"\");\r\n\r\n    let final_output = \"\";\r\n    if (res.status_id !== 3) {\r\n      if (decoded_compile_output === \"\") {\r\n        final_output = decoded_error;\r\n      } else {\r\n        final_output = decoded_compile_output;\r\n      }\r\n    } else {\r\n      final_output = decoded_output;\r\n    }\r\n    setCurrentOutput(status_name + \"\\n\\n\" + final_output);\r\n    closeModal();\r\n  };\r\n\r\n  const getFile = (e, setState) => {\r\n    const input = e.target;\r\n    if (\"files\" in input && input.files.length > 0) {\r\n      placeFileContent(input.files[0], setState);\r\n    }\r\n  };\r\n\r\n  const placeFileContent = (file, setState) => {\r\n    readFileContent(file)\r\n      .then((content) => {\r\n        setState(content);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  function readFileContent(file) {\r\n    const reader = new FileReader();\r\n    return new Promise((resolve, reject) => {\r\n      reader.onload = (event) => resolve(event.target.result);\r\n      reader.onerror = (error) => reject(error);\r\n      reader.readAsText(file);\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Navbar isFullScreen={isFullScreen} />\r\n      <div className=\"flex flex-col lg:flex-row h-full\">\r\n        <div className={`${isFullScreen ? \"w-full\" : \"w-full lg:w-3/4 \"}`}>\r\n          <EditorContainer\r\n            title={title}\r\n            currentLanguage={currentLanguage}\r\n            setCurrentLanguage={setCurrentLanguage}\r\n            currentCode={currentCode}\r\n            setCurrentCode={setCurrentCode}\r\n            folderId={folderId}\r\n            playgroundId={playgroundId}\r\n            saveCode={saveCode}\r\n            runCode={runCode}\r\n            getFile={getFile}\r\n            isFullScreen={isFullScreen}\r\n            setIsFullScreen={setIsFullScreen}\r\n          />\r\n        </div>\r\n        {!isFullScreen && (\r\n          <div className={`w-full lg:w-1/4`}>\r\n            <InputConsole\r\n              currentInput={currentInput}\r\n              setCurrentInput={setCurrentInput}\r\n              getFile={getFile}\r\n            />\r\n            <OutputConsole currentOutput={currentOutput} />\r\n          </div>\r\n        )}\r\n        {isOpenModal.show && <Modal />}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PlayGround;\r\n"],"names":["isFullScreen","className","src","alt","currentLanguage","currentTheme","currentCode","setCurrentCode","useState","githubDark","theme","setTheme","javascript","language","setLanguage","useEffect","cpp","java","python","githubLight","bespin","duotoneDark","duotoneLight","dracula","xcodeDark","xcodeLight","vscodeDark","okaidia","value","height","extensions","indentUnit","EditorState","onChange","basicSetup","lineNumbers","highlightActiveLineGutter","highlightSpecialChars","history","foldGutter","drawSelection","dropCursor","allowMultipleSelections","indentOnInput","syntaxHighlighting","bracketMatching","closeBrackets","autocompletion","rectangularSelection","crosshairCursor","highlightActiveLine","highlightSelectionMatches","closeBracketsKeymap","defaultKeymap","searchKeymap","historyKeymap","foldKeymap","completionKeymap","lintKeymap","title","setCurrentLanguage","folderId","playgroundId","runCode","saveCode","getFile","setIsFullScreen","openModal","useContext","ModalContext","languageOptions","label","setCurrentTheme","i","length","style","fontSize","onClick","show","modalType","identifiers","cardId","options","selectedOption","languageMap","defaultCode","htmlFor","type","accept","id","e","href","encodeURIComponent","download","currentInput","setCurrentInput","target","currentOutput","disabled","useParams","PlaygroundContext","folders","savePlayground","isOpenModal","closeModal","playgrounds","code","setCurrentOutput","encode","str","Buffer","toString","decode","postSubmission","language_id","source_code","stdin","method","url","params","base64_encoded","fields","headers","data","JSON","stringify","axios","res","token","getOutput","status_id","res2","status_name","status","description","decoded_output","stdout","decoded_compile_output","compile_output","decoded_error","stderr","final_output","setState","input","files","placeFileContent","file","reader","FileReader","Promise","resolve","reject","onload","event","result","onerror","error","readAsText","readFileContent","then","content","catch","console","log","Modal"],"sourceRoot":""}