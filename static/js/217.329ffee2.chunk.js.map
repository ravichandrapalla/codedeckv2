{"version":3,"file":"static/js/217.329ffee2.chunk.js","mappings":"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","sources":["Components/ModalTypes/NewFolder.jsx","Components/ModalTypes/NewPlayGround.jsx","Components/ModalTypes/NewPlayGroundAndFolder.jsx","Components/ModalTypes/EditFolder.jsx","Components/ModalTypes/EditPlayGroundTitle.jsx","Components/ModalTypes/Loading.jsx","Components/FormInputComponent.jsx","Components/Toast.js","Components/SignUp.jsx","Components/SignIn.jsx","Components/ModalTypes/SignInSignUp.jsx","Components/Modal.jsx"],"sourcesContent":["import React, { useState, useContext } from \"react\";\r\nimport { RxCross1 } from \"react-icons/rx\";\r\nimport { ModalContext } from \"../../Context/ModalContext\";\r\nimport { PlaygroundContext } from \"../../Context/PlaygroundContext\";\r\n\r\nfunction NewFolder() {\r\n  const { closeModal } = useContext(ModalContext);\r\n  const { addFolder } = useContext(PlaygroundContext);\r\n  const [folderTitle, setFolderTitle] = useState(\"\");\r\n\r\n  console.log(\"NewFolder\");\r\n  return (\r\n    <>\r\n      <div className=\"flex flex-row justify-end p-4\">\r\n        <RxCross1 className=\"cursor-pointer\" onClick={() => closeModal()} />\r\n      </div>\r\n      <div className=\" px-6 py-4 mb-8 flex flex-col items-center justify-center gap-6 \">\r\n        <h2> Create a New Folder</h2>\r\n        <input\r\n          type=\"text\"\r\n          value={folderTitle}\r\n          placeholder=\"Please enter folder title\"\r\n          onChange={(e) => setFolderTitle(e.target.value)}\r\n          className=\"border-[.5px] text-sm  border-gray  rounded-lg shadow-sm  p-2 w-full\"\r\n        />\r\n        <button\r\n          className=\"p-3 w-36 text-black bg-white rounded-lg font-semibold bg-darkBlue border-[0.5px] border-gray shadow-lg\"\r\n          onClick={() => {\r\n            addFolder(folderTitle);\r\n            closeModal();\r\n          }}\r\n        >\r\n          Create Folder\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default NewFolder;\r\n","import React, { useState, useContext } from \"react\";\r\nimport { RxCross1 } from \"react-icons/rx\";\r\nimport { ModalContext } from \"../../Context/ModalContext\";\r\nimport { PlaygroundContext } from \"../../Context/PlaygroundContext\";\r\nimport Select from \"react-select\";\r\n\r\nfunction NewPlayGround() {\r\n  const { isOpenModal, closeModal } = useContext(ModalContext);\r\n  const { addPlayground } = useContext(PlaygroundContext);\r\n\r\n  const languageOptions = [\r\n    { value: \"javascript\", label: \"javascript\" },\r\n    { value: \"python\", label: \"python\" },\r\n    { value: \"java\", label: \"java\" },\r\n    { value: \"cpp\", label: \"cpp\" },\r\n  ];\r\n\r\n  const { folderId } = isOpenModal.identifiers;\r\n  const [cardTitle, setCardTitle] = useState(\"\");\r\n  const [language, setLanguage] = useState(languageOptions[0]);\r\n\r\n  const handleLanguageChange = (selectedOption) => {\r\n    setLanguage(selectedOption);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"flex flex-row justify-end p-4\">\r\n        <RxCross1 className=\"cursor-pointer\" onClick={() => closeModal()} />\r\n      </div>\r\n      <div className=\" px-6 py-4 mb-8 flex flex-col items-center justify-center gap-6 \">\r\n        <h2> Create a New Playground</h2>\r\n        <input\r\n          type=\"text\"\r\n          value={cardTitle}\r\n          placeholder=\"Please enter Playground title\"\r\n          onChange={(e) => setCardTitle(e.target.value)}\r\n          className=\"border-[.5px] text-sm  border-gray  rounded-lg shadow-sm  p-2 w-full\"\r\n        />\r\n        <Select\r\n          options={languageOptions}\r\n          value={language}\r\n          onChange={handleLanguageChange}\r\n        />\r\n        <button\r\n          className=\"p-3 w-36 text-black bg-white rounded-lg font-semibold bg-darkBlue border-[0.5px] border-gray shadow-lg\"\r\n          onClick={() => {\r\n            addPlayground(folderId, cardTitle, language.value);\r\n            closeModal();\r\n          }}\r\n        >\r\n          Create Folder\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default NewPlayGround;\r\n","import React, { useState, useContext } from \"react\";\r\nimport { RxCross1 } from \"react-icons/rx\";\r\nimport { ModalContext } from \"../../Context/ModalContext\";\r\nimport { PlaygroundContext } from \"../../Context/PlaygroundContext\";\r\nimport Select from \"react-select\";\r\n//import PlayGround from \"../../Pages/PlayGround\";\r\n\r\nfunction NewPlayGroundAndFolder() {\r\n  const { isOpenModal, closeModal } = useContext(ModalContext);\r\n  const { addPlaygroundAndFolder } = useContext(PlaygroundContext);\r\n\r\n  const languageOptions = [\r\n    { value: \"javascript\", label: \"javascript\" },\r\n    { value: \"python\", label: \"python\" },\r\n    { value: \"java\", label: \"java\" },\r\n    { value: \"cpp\", label: \"cpp\" },\r\n  ];\r\n\r\n  const [playgroundName, setPlaygroundName] = useState(\"\");\r\n  const [folderName, setFolderName] = useState(\"\");\r\n  const [language, setLanguage] = useState(languageOptions[0]);\r\n  const handleLanguageChange = (selectedOption) => {\r\n    setLanguage(selectedOption);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"flex flex-row justify-end p-4\">\r\n        <RxCross1 className=\"cursor-pointer\" onClick={() => closeModal()} />\r\n      </div>\r\n      <div className=\" px-6 py-4 mb-8 flex flex-col items-center justify-center gap-6 \">\r\n        <h2> Create a New Playground & New Folder</h2>\r\n        <div className=\"flex w-full\">\r\n          <label>Enter Folder Name</label>\r\n          <input\r\n            type=\"text\"\r\n            value={folderName}\r\n            placeholder=\"Please enter Playground title\"\r\n            onChange={(e) => setFolderName(e.target.value)}\r\n            className=\"border-[.5px] text-sm  border-gray  rounded-lg shadow-sm  p-2 w-full\"\r\n          />\r\n        </div>\r\n        <div className=\"flex w-full\">\r\n          <label>Enter Playground Name</label>\r\n          <input\r\n            type=\"text\"\r\n            value={playgroundName}\r\n            placeholder=\"Please enter Playground title\"\r\n            onChange={(e) => setPlaygroundName(e.target.value)}\r\n            className=\"border-[.5px] text-sm  border-gray  rounded-lg shadow-sm  p-2 w-full \"\r\n          />\r\n        </div>\r\n\r\n        <Select\r\n          options={languageOptions}\r\n          value={language}\r\n          onChange={handleLanguageChange}\r\n        />\r\n        <button\r\n          className=\"p-3 w-36 text-black bg-white rounded-lg font-semibold bg-darkBlue border-[0.5px] border-gray shadow-lg\"\r\n          onClick={() => {\r\n            addPlaygroundAndFolder(folderName, playgroundName, language.value);\r\n            closeModal();\r\n          }}\r\n        >\r\n          Create PlayGround\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default NewPlayGroundAndFolder;\r\n","import React, { useState, useContext } from \"react\";\r\nimport { RxCross1 } from \"react-icons/rx\";\r\nimport { ModalContext } from \"../../Context/ModalContext\";\r\nimport { PlaygroundContext } from \"../../Context/PlaygroundContext\";\r\nfunction EditFolder() {\r\n  const { closeModal, isOpenModal } = useContext(ModalContext);\r\n  const { editFolderTitle, folders } = useContext(PlaygroundContext);\r\n\r\n  const folderId = isOpenModal.identifiers.folderId;\r\n  const [folderTitle, setFolderTitle] = useState(folders[folderId].title);\r\n  return (\r\n    <>\r\n      <div className=\"flex flex-row justify-end p-4\">\r\n        <RxCross1 className=\"cursor-pointer\" onClick={() => closeModal()} />\r\n      </div>\r\n      <div className=\" px-6 py-4 mb-8 flex flex-col items-center justify-center gap-6 \">\r\n        <h2> Edit Folder </h2>\r\n        <input\r\n          type=\"text\"\r\n          value={folderTitle}\r\n          placeholder=\"Please enter folder title\"\r\n          onChange={(e) => setFolderTitle(e.target.value)}\r\n          className=\"border-[.5px] text-sm  border-gray  rounded-lg shadow-sm  p-2 w-full\"\r\n        />\r\n        <button\r\n          className=\"p-3 w-36 text-black bg-white rounded-lg font-semibold bg-darkBlue border-[0.5px] border-gray shadow-lg\"\r\n          onClick={() => {\r\n            editFolderTitle(folderId, folderTitle);\r\n            closeModal();\r\n          }}\r\n        >\r\n          Proceed\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default EditFolder;\r\n","import React, { useState, useContext } from \"react\";\r\nimport { RxCross1 } from \"react-icons/rx\";\r\nimport { ModalContext } from \"../../Context/ModalContext\";\r\nimport { PlaygroundContext } from \"../../Context/PlaygroundContext\";\r\n\r\nfunction EditPlayGroundTitle() {\r\n  const { closeModal, isOpenModal } = useContext(ModalContext);\r\n  const { editPlaygroundTitle, folders } = useContext(PlaygroundContext);\r\n\r\n  const { folderId, cardId } = isOpenModal.identifiers;\r\n  const [playgroundTitle, setPlaygroundTitle] = useState(\r\n    folders[folderId].playgrounds[cardId].title\r\n  );\r\n  return (\r\n    <>\r\n      <div className=\"flex flex-row justify-end p-4\">\r\n        <RxCross1 className=\"cursor-pointer\" onClick={() => closeModal()} />\r\n      </div>\r\n      <div className=\" px-6 py-4 mb-8 flex flex-col items-center justify-center gap-6 \">\r\n        <h2> Edit Folder </h2>\r\n        <input\r\n          type=\"text\"\r\n          value={playgroundTitle}\r\n          placeholder=\"Please enter folder title\"\r\n          onChange={(e) => setPlaygroundTitle(e.target.value)}\r\n          className=\"border-[.5px] text-sm  border-gray  rounded-lg shadow-sm  p-2 w-full\"\r\n        />\r\n        <button\r\n          className=\"p-3 w-36 text-black bg-white rounded-lg font-semibold bg-darkBlue border-[0.5px] border-gray shadow-lg\"\r\n          onClick={() => {\r\n            editPlaygroundTitle(folderId, cardId, playgroundTitle);\r\n            closeModal();\r\n          }}\r\n        >\r\n          Proceed\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default EditPlayGroundTitle;\r\n","import React from \"react\";\r\n\r\nfunction Loading() {\r\n  return <div>Loading</div>;\r\n}\r\n\r\nexport default Loading;\r\n","import React from \"react\";\r\nimport { Controller } from \"react-hook-form\";\r\nfunction FormInputComponent({\r\n  label,\r\n  labelStrong,\r\n  type,\r\n  accept,\r\n  name,\r\n  control,\r\n  required,\r\n  ...props\r\n}) {\r\n  return (\r\n    <div className=\"mt-2\">\r\n      <label htmlFor={name} className=\"flex gap-2\">\r\n        <h4 className=\"text-gray-500 text-sm\">{label}</h4>\r\n        {required && <h6 className=\"text-red text-sm\">*</h6>}\r\n      </label>\r\n      <div>\r\n        <Controller\r\n          control={control}\r\n          name={name}\r\n          render={({ field }) => (\r\n            <input\r\n              {...field}\r\n              type={type}\r\n              value={props?.value}\r\n              id={name}\r\n              accept={props?.accept}\r\n              placeholder={props?.placeholder}\r\n              className=\"w-full border-2 bg-white p-3 mt-2 font-semibold shadow-lg rounded-lg\"\r\n            />\r\n          )}\r\n        />\r\n        {props?.error && (\r\n          <span className=\"text-red text-[8px]\">{props?.error}</span>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FormInputComponent;\r\n","export const toastArray = {\r\n  position: \"top-right\",\r\n  autoClose: 4000,\r\n  hideProgressBar: false,\r\n  closeOnClick: false,\r\n  pauseOnHover: false,\r\n  draggable: false,\r\n  progress: undefined,\r\n  theme: \"light\",\r\n};\r\n","import React, { useContext, useState } from \"react\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { auth } from \"../firebaseConfig\";\r\nimport { ModalContext } from \"../Context/ModalContext\";\r\nimport FormInputComponent from \"./FormInputComponent\";\r\nimport { toast } from \"react-toastify\";\r\nimport { toastArray } from \"./Toast\";\r\n\r\nfunction SignUp() {\r\n  const { closeModal } = useContext(ModalContext);\r\n  const validationSchema = yup.object().shape({\r\n    email: yup.string().email(\"Invalid Email\").required(\"Required Field\"),\r\n    password: yup.string().required(\"Required Field\").min(6),\r\n    confirmPassword: yup\r\n      .string()\r\n      .required(\"Required Field\")\r\n      .min(6)\r\n      .oneOf([yup.ref(\"password\")], \"Passwords must match\"),\r\n  });\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    control,\r\n    formState: { errors },\r\n  } = useForm({\r\n    resolver: yupResolver(validationSchema),\r\n  });\r\n  const onSubmit = (data) => {\r\n    auth\r\n      .createUserWithEmailAndPassword(data.email, data.password)\r\n      .then((userCredential) => {\r\n        toast.success(\"SignUp Succesfull\", toastArray);\r\n      })\r\n      .catch((error) => {\r\n        toast.error(error, toastArray);\r\n      });\r\n    console.log(data);\r\n  };\r\n  return (\r\n    <div className=\"flex flex-col w-full p-4\">\r\n      <form id=\"hook-form\" onSubmit={handleSubmit(onSubmit)}>\r\n        <FormInputComponent\r\n          label=\"Email\"\r\n          type=\"email\"\r\n          name=\"email\"\r\n          placeholder=\"Enter your email\"\r\n          control={control}\r\n          error={errors?.email?.message}\r\n          required\r\n        />\r\n        <FormInputComponent\r\n          label=\"Password\"\r\n          type=\"password\"\r\n          name=\"password\"\r\n          placeholder=\"Enter your Password\"\r\n          control={control}\r\n          error={errors?.password?.message}\r\n          required\r\n        />\r\n        <FormInputComponent\r\n          label=\"Confirm Password\"\r\n          type=\"password\"\r\n          name=\"confirmPassword\"\r\n          placeholder=\"Enter your Password again\"\r\n          control={control}\r\n          error={errors?.confirmPassword?.message}\r\n          required\r\n        />\r\n      </form>\r\n      <button\r\n        type=\"submit\"\r\n        form=\"hook-form\"\r\n        className=\"w-full border-2 bg-white p-3 mt-8 font-semibold shadow-lg rounded-lg\"\r\n      >\r\n        {\" \"}\r\n        Sign Up\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignUp;\r\n","import React, { useContext, useState } from \"react\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { auth } from \"../firebaseConfig\";\r\nimport { ModalContext } from \"../Context/ModalContext\";\r\nimport FormInputComponent from \"./FormInputComponent\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { toastArray } from \"./Toast\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nimport { ToastContainer } from \"react-toastify\";\r\n\r\nfunction SignIn() {\r\n  const { closeModal } = useContext(ModalContext);\r\n  const validationSchema = yup.object().shape({\r\n    email: yup.string().email(\"Invalid Email\").required(\"Required Field\"),\r\n    password: yup.string().required(\"Required Field\").min(6),\r\n  });\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    control,\r\n    formState: { errors },\r\n  } = useForm({\r\n    resolver: yupResolver(validationSchema),\r\n  });\r\n  const onSubmit = (data) => {\r\n    auth\r\n      .signInWithEmailAndPassword(data.email, data.password)\r\n      .then((userCredential) => {\r\n        console.log(userCredential);\r\n        toast.success(\"Login Succesfull\", toastArray);\r\n        closeModal();\r\n      })\r\n      .catch((error) => {\r\n        console.log(error, toastArray);\r\n        toast.error(error, toastArray);\r\n      });\r\n    console.log(data);\r\n  };\r\n  return (\r\n    <div className=\"flex flex-col w-full p-4\">\r\n      <form id=\"hook-form\" onSubmit={handleSubmit(onSubmit)}>\r\n        <FormInputComponent\r\n          label=\"Email\"\r\n          type=\"email\"\r\n          name=\"email\"\r\n          placeholder=\"Enter your email\"\r\n          control={control}\r\n          error={errors?.email?.message}\r\n          required\r\n        />\r\n        <FormInputComponent\r\n          label=\"Password\"\r\n          type=\"password\"\r\n          name=\"password\"\r\n          placeholder=\"Enter your Password\"\r\n          control={control}\r\n          error={errors?.password?.message}\r\n          required\r\n        />\r\n      </form>\r\n      <button\r\n        type=\"submit\"\r\n        form=\"hook-form\"\r\n        className=\"w-full border-2 bg-white p-3 mt-8 font-semibold shadow-lg rounded-lg\"\r\n      >\r\n        {\" \"}\r\n        Sign In\r\n      </button>\r\n      <ToastContainer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignIn;\r\n","import React from \"react\";\r\nimport SignUp from \"../SignUp\";\r\nimport SignIn from \"../SignIn\";\r\nimport { ModalContext } from \"../../Context/ModalContext\";\r\nimport { useContext } from \"react\";\r\nimport { RxCross1 } from \"react-icons/rx\";\r\nimport { signInWithPopup, GoogleAuthProvider } from \"firebase/auth\";\r\nimport { auth } from \"../../firebaseConfig\";\r\nimport { useAuthState } from \"react-firebase-hooks/auth\";\r\nfunction SignInSignUp() {\r\n  const [user] = useAuthState(auth);\r\n  const { closeModal } = useContext(ModalContext);\r\n  const [signInShow, setSignInShow] = React.useState(false);\r\n  const googleProvider = new GoogleAuthProvider();\r\n  const signInWithGoogle = () => {\r\n    signInWithPopup(auth, googleProvider)\r\n      .then((result) => {\r\n        console.log(result);\r\n        closeModal();\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n  return (\r\n    <div>\r\n      <div className=\"flex flex-row justify-end p-4\">\r\n        <RxCross1 className=\"cursor-pointer\" onClick={closeModal} />\r\n      </div>\r\n      <div className=\"flex flex-col justify-center items-center\">\r\n        <h2>{signInShow ? \"Sign In \" : \"Sign Up\"}</h2>\r\n        {!signInShow ? <SignUp /> : <SignIn />}\r\n        <div className=\"p-4 w-full\">\r\n          <button\r\n            onClick={signInWithGoogle}\r\n            className=\"w-full border-2 bg-white p-3 font-semibold shadow-lg rounded-lg\"\r\n          >\r\n            {\" \"}\r\n            Sign In With Google\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignInSignUp;\r\n","import React, { useContext } from \"react\";\r\nimport { ModalContext } from \"../Context/ModalContext\";\r\n//import { RxCross1 } from \"react-icons/rx\";\r\nimport {\r\n  NewFolder,\r\n  NewPlayGround,\r\n  NewPlayGroundAndFolder,\r\n  EditFolder,\r\n  EditPlayGroundTitle,\r\n  Loading,\r\n  SignInSignUp,\r\n} from \"./ModalTypes\";\r\nfunction Modal() {\r\n  const { isOpenModal } = useContext(ModalContext);\r\n  const { modalType } = isOpenModal;\r\n \r\n  return (\r\n    <>\r\n      <div className=\"justify-center items-center flex overflow-x-hidden overflow-y-auto fixed inset-0 z-50 outline-none focus:outline-none\">\r\n        <div\r\n          className=\"relative w-auto my-6 mx-auto max-w-3xl\"\r\n          onClick={(e) => {\r\n            e.stopPropagation();\r\n          }}\r\n        >\r\n          <div className=\"border-0  rounded-lg shadow-lg relative flex flex-col w-[30rem] bg-white outline-none focus:outline-none\">\r\n            {modalType === 1 && <NewFolder />}\r\n            {modalType === 2 && <NewPlayGround />}\r\n            {modalType === 3 && <NewPlayGroundAndFolder />}\r\n            {modalType === 4 && <EditFolder />}\r\n            {modalType === 5 && <EditPlayGroundTitle />}\r\n            {modalType === 6 && <Loading />}\r\n            {modalType === 7 && <SignInSignUp />}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"opacity-25 fixed inset-0 z-40 bg-black\"></div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Modal;\r\n"],"names":["closeModal","useContext","ModalContext","addFolder","PlaygroundContext","useState","folderTitle","setFolderTitle","console","log","className","onClick","type","value","placeholder","onChange","e","target","isOpenModal","addPlayground","languageOptions","label","folderId","identifiers","cardTitle","setCardTitle","language","setLanguage","options","selectedOption","addPlaygroundAndFolder","playgroundName","setPlaygroundName","folderName","setFolderName","editFolderTitle","folders","title","editPlaygroundTitle","cardId","playgrounds","playgroundTitle","setPlaygroundTitle","labelStrong","name","accept","control","required","props","htmlFor","render","field","id","error","toastArray","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","validationSchema","yup","shape","email","password","min","confirmPassword","oneOf","useForm","resolver","yupResolver","handleSubmit","register","errors","formState","onSubmit","data","auth","then","userCredential","toast","catch","message","form","useAuthState","React","signInShow","googleProvider","GoogleAuthProvider","signInWithPopup","result","modalType","stopPropagation"],"sourceRoot":""}